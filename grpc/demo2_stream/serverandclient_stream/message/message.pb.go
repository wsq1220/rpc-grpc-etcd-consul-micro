// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 订单请求参数
type OrderRequest struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	TimeStamp            int64    `protobuf:"varint,2,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_df9d36e532608414, []int{0}
}
func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (dst *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(dst, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderRequest) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

// 订单信息
type OrderInfo struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	OrderName            string   `protobuf:"bytes,2,opt,name=OrderName,proto3" json:"OrderName,omitempty"`
	OrderStatus          string   `protobuf:"bytes,3,opt,name=OrderStatus,proto3" json:"OrderStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderInfo) Reset()         { *m = OrderInfo{} }
func (m *OrderInfo) String() string { return proto.CompactTextString(m) }
func (*OrderInfo) ProtoMessage()    {}
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_df9d36e532608414, []int{1}
}
func (m *OrderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderInfo.Unmarshal(m, b)
}
func (m *OrderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderInfo.Marshal(b, m, deterministic)
}
func (dst *OrderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderInfo.Merge(dst, src)
}
func (m *OrderInfo) XXX_Size() int {
	return xxx_messageInfo_OrderInfo.Size(m)
}
func (m *OrderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OrderInfo proto.InternalMessageInfo

func (m *OrderInfo) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderInfo) GetOrderName() string {
	if m != nil {
		return m.OrderName
	}
	return ""
}

func (m *OrderInfo) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderRequest)(nil), "message.OrderRequest")
	proto.RegisterType((*OrderInfo)(nil), "message.OrderInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	GetOrderInfos(ctx context.Context, opts ...grpc.CallOption) (OrderService_GetOrderInfosClient, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetOrderInfos(ctx context.Context, opts ...grpc.CallOption) (OrderService_GetOrderInfosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OrderService_serviceDesc.Streams[0], "/message.OrderService/GetOrderInfos", opts...)
	if err != nil {
		return nil, err
	}
	x := &orderServiceGetOrderInfosClient{stream}
	return x, nil
}

type OrderService_GetOrderInfosClient interface {
	Send(*OrderRequest) error
	Recv() (*OrderInfo, error)
	grpc.ClientStream
}

type orderServiceGetOrderInfosClient struct {
	grpc.ClientStream
}

func (x *orderServiceGetOrderInfosClient) Send(m *OrderRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *orderServiceGetOrderInfosClient) Recv() (*OrderInfo, error) {
	m := new(OrderInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	GetOrderInfos(OrderService_GetOrderInfosServer) error
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetOrderInfos_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OrderServiceServer).GetOrderInfos(&orderServiceGetOrderInfosServer{stream})
}

type OrderService_GetOrderInfosServer interface {
	Send(*OrderInfo) error
	Recv() (*OrderRequest, error)
	grpc.ServerStream
}

type orderServiceGetOrderInfosServer struct {
	grpc.ServerStream
}

func (x *orderServiceGetOrderInfosServer) Send(m *OrderInfo) error {
	return x.ServerStream.SendMsg(m)
}

func (x *orderServiceGetOrderInfosServer) Recv() (*OrderRequest, error) {
	m := new(OrderRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOrderInfos",
			Handler:       _OrderService_GetOrderInfos_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "message.proto",
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_df9d36e532608414) }

var fileDescriptor_message_df9d36e532608414 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xb1, 0xae, 0x82, 0x30,
	0x14, 0x40, 0x5f, 0x1f, 0x89, 0xa4, 0x55, 0x96, 0x26, 0x26, 0x8d, 0x71, 0x20, 0x4c, 0x4c, 0xc4,
	0xe8, 0x0f, 0x38, 0x69, 0x58, 0xc4, 0x94, 0x2f, 0xa8, 0x72, 0x35, 0x0c, 0xb5, 0xd8, 0x5e, 0xfc,
	0x7e, 0x43, 0x03, 0x02, 0x5b, 0xcf, 0x69, 0x73, 0xda, 0x5b, 0x16, 0x69, 0x70, 0x4e, 0x3d, 0x21,
	0x6b, 0xac, 0x41, 0xc3, 0xc3, 0x1e, 0x93, 0x13, 0x5b, 0x15, 0xb6, 0x02, 0x2b, 0xe1, 0xdd, 0x82,
	0x43, 0x2e, 0x58, 0x68, 0x3a, 0xce, 0x2b, 0x41, 0x62, 0x92, 0x52, 0x39, 0x20, 0xdf, 0x32, 0x8a,
	0xb5, 0x86, 0x12, 0x95, 0x6e, 0xc4, 0x7f, 0x4c, 0xd2, 0x40, 0x8e, 0x22, 0x01, 0x46, 0x7d, 0x27,
	0x7f, 0x3d, 0x4c, 0x17, 0x29, 0xe6, 0x91, 0x62, 0x8c, 0xf8, 0xe5, 0x45, 0x69, 0xf0, 0x11, 0x2a,
	0x47, 0xc1, 0x63, 0xb6, 0xf4, 0x50, 0xa2, 0xc2, 0xd6, 0x89, 0xc0, 0xef, 0x4f, 0xd5, 0xfe, 0xda,
	0x3f, 0xb7, 0x04, 0xfb, 0xa9, 0xef, 0xc0, 0x8f, 0x2c, 0x3a, 0x03, 0xfe, 0x6e, 0x76, 0x7c, 0x9d,
	0x0d, 0x83, 0x4e, 0xc7, 0xda, 0xf0, 0xb9, 0xee, 0xce, 0x26, 0x7f, 0x29, 0xd9, 0x91, 0xdb, 0xc2,
	0x7f, 0xc8, 0xe1, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xb7, 0xe7, 0x9b, 0x21, 0x01, 0x00, 0x00,
}
